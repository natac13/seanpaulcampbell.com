---
import type { CollectionEntry } from 'astro:content'
import { SITE } from '../constants'

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props

const title = post.data.title || SITE.title
const description = post.data.description || SITE.description
const defaultImage = '/images/default-social.jpg'
const siteUrl = Astro.site || new URL(Astro.url.pathname, Astro.url.origin)

// Get image URL, defaulting to site default
const imageUrl = new URL(defaultImage, siteUrl).toString()

// Author info
const author = SITE.author
---

<title>{`${title} | ${SITE.title}`}</title>
<meta name="title" content={`${title} | ${SITE.title}`} />
<meta name="description" content={description} />
<link rel="canonical" href={Astro.url} />

<!-- Open Graph / Facebook -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
<meta property="og:image:alt" content={title} />
<meta property="og:type" content="article" />
<meta property="og:locale" content={SITE.locale} />
<meta property="og:site_name" content={SITE.title} />
<meta property="og:url" content={Astro.url} />
<meta property="og:author" content={author} />

<!-- Twitter -->
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageUrl} />
<meta name="twitter:image:alt" content={title} />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:creator" content={author} />

<!-- Article tags -->
{
  post?.data.tags &&
    post.data.tags.map((tag: string) => {
      return <meta property="article:tag" content={tag} />;
    })
}

<!-- Article published time -->
{
  post.data.publishDate && (
    <meta
      property="article:published_time"
      content={post.data.publishDate.toISOString()}
    />
  )
}

<!-- Article modified time if available -->
{
  post.data.updatedDate && (
    <meta
      property="article:modified_time"
      content={post.data.updatedDate.toISOString()}
    />
  )
}
